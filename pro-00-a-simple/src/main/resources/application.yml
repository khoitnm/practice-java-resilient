server:
  port: 8001

# https://resilience4j.readme.io/docs/getting-started-3
# https://resilience4j.readme.io/docs/circuitbreaker#create-and-configure-a-circuitbreaker
#resilience4j:
#  retry:
#    instances:
      # the name should match the constants in ResilientSupport.java
      # View more about the configuration fields in io.github.resilience4j.retry.RetryConfig and https://resilience4j.readme.io/docs/retry
#      hello:
#        maxAttempts: 4
#        waitDuration: 1s
#        enableExponentialBackoff: true
#        exponentialBackoffMultiplier: 1.5
#        retryOnExceptionPredicate: org.tnmk.practice_java_resilient.pro_00_a_simple.common.resilient.retry.RetryOnExceptionPredicate
#        retryExceptions:
#          - org.springframework.web.client.HttpClientErrorException.NotFound
#          - org.springframework.web.client.HttpClientErrorException
#          - org.springframework.web.client.RestClientException
#          - org.springframework.web.client.HttpServerErrorException
#          - java.io.IOException
  #      ignoreExceptions:
  #        - io.github.robwin.exception.BusinessException

  circuitbreaker:
    instances:
      iam:
        registerHealthIndicator: true
      twilio:
        registerHealthIndicator: true
      pccApis:
        registerHealthIndicator: true


echo:
  host: http://localhost:8002